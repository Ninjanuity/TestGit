package com.jwern.gametest;

import java.awt.Canvas;
import java.awt.Dimension;
import javax.swing.JFrame;

public class Game extends Canvas implements Runnable {
	//aspect ratios
	//first thread
	public static int width = 300;
	public static int height = (width/16)*9;
	public static int scale = 3;
	
	private Thread thread;
	private JFrame frame;
	private boolean running = false;
	
	//constructor so no need for a return type, will only be created once
	public Game(){
		Dimension size = new Dimension(width*scale, height*scale);
		setPreferredSize(size);
	}
	
	// synchronized ensures there's no overlap of instructions for thread
	public synchronized void start(){
		running = true;
		// new thread contains 'this' game class. Attached to game object
		// implements runnable allows 'this' notation; requires a run method
		thread = new Thread(this, "Display");
		// need to start the thread now
		thread.start();
	}
	// Need to stop threads, or game won't shut properly. (i.e. music still playing)
	
	public synchronized void stop(){
		running = false;
		// error with just thread.join(); (InterruptedException)
		try{
		// join all threads together
		thread.join();
		} catch (InterruptedException e){
			e.printStackTrace();
		}
	}
	
	public void run(){
		while(running){
			
		}
		
	}
	
	public static void main(String[] args){
		
	}
	
	
	

}
